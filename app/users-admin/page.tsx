import { cookies } from 'next/headers';
import { redirect } from 'next/navigation';
import { getValidSessionByToken } from '../../database/sessions';
import { getUsers } from '../../database/users';
import UsersForm from './UsersForm';

export const metadata = {
  title: 'Users Admin page',
  description: 'Generated by create next app',
};

interface SessionInfo {
  id: number;
  token: string;
  isAdmin: boolean;
}

export default async function UsersPage() {
  // Task: Add redirect to home if user is logged in
  // 1. Checking if the sessionToken cookie exists
  const sessionTokenCookie = cookies().get('sessionToken');

  // 2. Check if the sessionToken cookie is still valid
  const session: SessionInfo =
    sessionTokenCookie &&
    (await getValidSessionByToken(sessionTokenCookie.value));

  // 3. If the sessionToken cookie is invalid or doesn't exist, redirect to login with returnTo
  if (!session) redirect('/login?returnTo=/users-admin');

  // 4. Check if the user is an admin based on the information in the session
  const isAdmin = session.isAdmin;

  // 5. If the user is not an admin, redirect to home or show an unauthorized message
  if (!isAdmin) {
    // Redirect to home or show an unauthorized message
    redirect('/');
    // Or you can return a message or component indicating unauthorized access
    //return <div>Unauthorized Access</div>;
  }

  // 6. If the sessionToken cookie is valid and the user is an admin, allow access to the admin page
  const users = await getUsers();

  return <UsersForm users={users} />;
}
